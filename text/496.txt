Research Notes: 学 C 编程记
Research
2010-10-16 15:05
一、
从我大一的时候《计算概论》这门课（基本上相当于 C 语言初步）拿了 62 分之后，我就对 C 再也没有产生过兴趣。
我当然不认为自己缺乏编程的天赋。作为一个从小学数学的学生，编程纵然未必是强项，但是也不会给我带来任何心理压力。我只是单纯地不喜欢它。单单 #include  这一串字符就能让我心生厌恶，这也太违反思维的本性了。为什么仅仅为了计算一加一等于几，我就要以特定的顺序在键盘上敲入这样毫无意义的字母呢？
（如果用 Matlab 当然不会有这些烦恼，所以我很多年前就自然而然学会了 Matlab。但是 Matlab 毕竟不是严格意义上的编程语言。当然我们还有 Python，不过这些都是题外话了。）
每次看到诸如「你用 Perl 还是 Ruby」或者「C 和 Java 哪个有前途」这样的问题，我都会觉得深深地疲倦。所有这些语言，每一种都有它特定的语法习惯，都有它极为莫名其妙的别扭要求。逻辑变量是单字节还是四字节？条件语句是花括号还是无括号缩进？矩阵排列是行优先还是列优先？世界上有这么多优秀的头脑要拿出这么多时间和精力来训练自己熟悉和掌握所有这一切毫不直观并且随时有可能过时的知识，究竟有什么意义？法语或者日语已经够难学了，但是学会了至少可以让自己更容易念萨特和川端康成的书。学会 Fortran 或者 Lisp 能干什么呢？
所以我一直试图避免让自己去学习任何一种诸如此类的语言。在我念 Ph.D. 的第一年，一个学长告诉我，和 Matlab 这类工具相比，C 的学习曲线要陡峭得多，但是最终能达到的高度也会远远超出。我想他说的是对的，但是我还是没有学。
二、
直到上周，由于某个工作上的原因，我忽然觉得自己应该试着学一学 C。大多数我平时的研究用 Matlab 都可以胜任，但是有些计算会牵涉到无法实现为整块矩阵运算的单元素遍历，也有些大数据量的工作会要求非常经济地管理内存，这都是 Matlab 的弱项。我手头的研究中一两个子函数就属于这类情况，如果能用 C 来实现它们再由 Matlab 调用，效率会高很多。
于是我就下载了一本谭浩强的 C 语言教程，从头看起。我原先的 C 语言水平无法保证我能从零开始写出一个 Hello world! 而不出错。我手头的问题需要我实现一个特定的图像变分去噪算法，而我连条件语句里逻辑判断的写法都不知道。
但是另一方面，我从不怀疑我事实上「会」编程──我只是不会用 C 把它写出来而已。对于整个算法的数学框架我烂熟于心，手头还有一个我自己写过的 Matlab 代码可资验算。如果我按部就班地从冒泡算法开始写起，我一定会迅速地厌倦学 C 这件事。而现在有一个看起来既艰巨又不是遥不可及的目标摆在前面，反而带来极大的动力。不让自己真正跑起来是学不会走路的。
一开始很难，无数令人焦头烂额的困难开始浮现，任何一个愚蠢的错误都要让我 google 半天。有的时候是我自己愚蠢，但是更多时候──我不得不说──是这门语言本身愚蠢。写 C 程序的过程本质上是一个自己挖空心思去模仿乃至取悦 CPU 和内存的过程，它极度不自然，无论在算法层面还是语法层面都是如此。
但是渐渐地，这件事情开始显示出乐趣来，特别是从我能够得心应手地操纵指针开始。分配内存，传递参数，规划指针遍历的路径，这些事情里蕴藏着类似于手工艺活般地精巧和灵活性。最短的几个子函数正确完成之后，后面的工作就像水银泻地一样展开。我开始沉迷于这件事情，无论是吃饭还是坐车上班还是在别人的讨论班上听讲，满脑子想的都是程序的写法，或者换一种排序方式，或者增加一个索引变量。前天工作到深夜终于完成框架，昨天早上爬起来又迫不及待地要开始调试细节，昨天睡觉之前终于得到和我预期分毫不差的测试结果，今天忍不住又想要把整个算法推倒重来，因为我觉得我又想到了一种新的循环结构，可以减少两个条件判断语句的调用次数。我知道它已经很快了，我还想要它更快。
直到刚才，我最后做完一遍测试，保存，退出。这不眠不休的兴奋感终于像潮水一样退去了。
三、
我学到了很多东西。我可以从此不用再羞于承认我并不会在「真正意义上」编程，我可以在以后的研究里用更快的程序来实现算法，找工作也会稍微多一点底气──如果我真的不幸要找这样一份工作的话。
但是我并没因此改变我对编程这件事情的看法。掌握一种新工具所带来的新鲜感是令人眩惑乃至沉迷的，但是也仅限于此。设计一个好的图像去噪模型，和给出一个精巧的代码实现相比，后者「亲自动手」的感觉要强烈得多，面对漂亮结果的成就感也强烈得多。但是这并不能改变它更容易也更无聊的事实。
为什么会有人喜欢把这种事情作为职业呢？
无论如何，我也许应该感谢它帮助我度过了这本来也许很难熬的一周。事实证明，越是难过的时候，就越是适合学新东西的时候。前面还有一个漫长的冬季在等着我，没准我可以把上面提到的所有语言都学一遍。
